//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ProductCatalogModel", "FK_Product_ProductTypeId", "ProductType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ShopCart.ProductType), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShopCart.Product), true)]
[assembly: EdmRelationshipAttribute("ProductCatalogModel", "FK_ProductSku_ProductId", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ShopCart.Product), "ProductSku", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShopCart.ProductSku), true)]

#endregion

namespace ShopCart
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ProductCatalogEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ProductCatalogEntities object using the connection string found in the 'ProductCatalogEntities' section of the application configuration file.
        /// </summary>
        public ProductCatalogEntities() : base("name=ProductCatalogEntities", "ProductCatalogEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProductCatalogEntities object.
        /// </summary>
        public ProductCatalogEntities(string connectionString) : base(connectionString, "ProductCatalogEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProductCatalogEntities object.
        /// </summary>
        public ProductCatalogEntities(EntityConnection connection) : base(connection, "ProductCatalogEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductBundle> ProductBundles
        {
            get
            {
                if ((_ProductBundles == null))
                {
                    _ProductBundles = base.CreateObjectSet<ProductBundle>("ProductBundles");
                }
                return _ProductBundles;
            }
        }
        private ObjectSet<ProductBundle> _ProductBundles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductSku> ProductSkus
        {
            get
            {
                if ((_ProductSkus == null))
                {
                    _ProductSkus = base.CreateObjectSet<ProductSku>("ProductSkus");
                }
                return _ProductSkus;
            }
        }
        private ObjectSet<ProductSku> _ProductSkus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductSkuRule> ProductSkuRules
        {
            get
            {
                if ((_ProductSkuRules == null))
                {
                    _ProductSkuRules = base.CreateObjectSet<ProductSkuRule>("ProductSkuRules");
                }
                return _ProductSkuRules;
            }
        }
        private ObjectSet<ProductSkuRule> _ProductSkuRules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductType> ProductTypes
        {
            get
            {
                if ((_ProductTypes == null))
                {
                    _ProductTypes = base.CreateObjectSet<ProductType>("ProductTypes");
                }
                return _ProductTypes;
            }
        }
        private ObjectSet<ProductType> _ProductTypes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductBundles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductBundles(ProductBundle productBundle)
        {
            base.AddObject("ProductBundles", productBundle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductSkus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductSkus(ProductSku productSku)
        {
            base.AddObject("ProductSkus", productSku);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductSkuRules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductSkuRules(ProductSkuRule productSkuRule)
        {
            base.AddObject("ProductSkuRules", productSkuRule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductTypes(ProductType productType)
        {
            base.AddObject("ProductTypes", productType);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProductCatalogModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="productTypeId">Initial value of the ProductTypeId property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="visible">Initial value of the Visible property.</param>
        /// <param name="removable">Initial value of the Removable property.</param>
        /// <param name="shortName">Initial value of the ShortName property.</param>
        public static Product CreateProduct(global::System.String productId, global::System.String name, global::System.String description, global::System.Int32 productTypeId, global::System.Boolean active, global::System.Boolean visible, global::System.Boolean removable, global::System.String shortName)
        {
            Product product = new Product();
            product.ProductId = productId;
            product.Name = name;
            product.Description = description;
            product.ProductTypeId = productTypeId;
            product.Active = active;
            product.Visible = visible;
            product.Removable = removable;
            product.ShortName = shortName;
            return product;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.String _ProductId;
        partial void OnProductIdChanging(global::System.String value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductTypeId
        {
            get
            {
                return _ProductTypeId;
            }
            set
            {
                OnProductTypeIdChanging(value);
                ReportPropertyChanging("ProductTypeId");
                _ProductTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductTypeId");
                OnProductTypeIdChanged();
            }
        }
        private global::System.Int32 _ProductTypeId;
        partial void OnProductTypeIdChanging(global::System.Int32 value);
        partial void OnProductTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Visible
        {
            get
            {
                return _Visible;
            }
            set
            {
                OnVisibleChanging(value);
                ReportPropertyChanging("Visible");
                _Visible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Visible");
                OnVisibleChanged();
            }
        }
        private global::System.Boolean _Visible;
        partial void OnVisibleChanging(global::System.Boolean value);
        partial void OnVisibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Removable
        {
            get
            {
                return _Removable;
            }
            set
            {
                OnRemovableChanging(value);
                ReportPropertyChanging("Removable");
                _Removable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Removable");
                OnRemovableChanged();
            }
        }
        private global::System.Boolean _Removable;
        partial void OnRemovableChanging(global::System.Boolean value);
        partial void OnRemovableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProductCatalogModel", "FK_Product_ProductTypeId", "ProductType")]
        public ProductType ProductType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductType>("ProductCatalogModel.FK_Product_ProductTypeId", "ProductType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductType>("ProductCatalogModel.FK_Product_ProductTypeId", "ProductType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductType> ProductTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductType>("ProductCatalogModel.FK_Product_ProductTypeId", "ProductType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductType>("ProductCatalogModel.FK_Product_ProductTypeId", "ProductType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProductCatalogModel", "FK_ProductSku_ProductId", "ProductSku")]
        public EntityCollection<ProductSku> ProductSkus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductSku>("ProductCatalogModel.FK_ProductSku_ProductId", "ProductSku");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductSku>("ProductCatalogModel.FK_ProductSku_ProductId", "ProductSku", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProductCatalogModel", Name="ProductBundle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductBundle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductBundle object.
        /// </summary>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="includedProductId">Initial value of the IncludedProductId property.</param>
        /// <param name="includedSku">Initial value of the IncludedSku property.</param>
        public static ProductBundle CreateProductBundle(global::System.String productId, global::System.String includedProductId, global::System.String includedSku)
        {
            ProductBundle productBundle = new ProductBundle();
            productBundle.ProductId = productId;
            productBundle.IncludedProductId = includedProductId;
            productBundle.IncludedSku = includedSku;
            return productBundle;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.String _ProductId;
        partial void OnProductIdChanging(global::System.String value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IncludedProductId
        {
            get
            {
                return _IncludedProductId;
            }
            set
            {
                if (_IncludedProductId != value)
                {
                    OnIncludedProductIdChanging(value);
                    ReportPropertyChanging("IncludedProductId");
                    _IncludedProductId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("IncludedProductId");
                    OnIncludedProductIdChanged();
                }
            }
        }
        private global::System.String _IncludedProductId;
        partial void OnIncludedProductIdChanging(global::System.String value);
        partial void OnIncludedProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IncludedSku
        {
            get
            {
                return _IncludedSku;
            }
            set
            {
                OnIncludedSkuChanging(value);
                ReportPropertyChanging("IncludedSku");
                _IncludedSku = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IncludedSku");
                OnIncludedSkuChanged();
            }
        }
        private global::System.String _IncludedSku;
        partial void OnIncludedSkuChanging(global::System.String value);
        partial void OnIncludedSkuChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProductCatalogModel", Name="ProductSku")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductSku : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductSku object.
        /// </summary>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="sku">Initial value of the Sku property.</param>
        /// <param name="isDefault">Initial value of the IsDefault property.</param>
        public static ProductSku CreateProductSku(global::System.String productId, global::System.String sku, global::System.Boolean isDefault)
        {
            ProductSku productSku = new ProductSku();
            productSku.ProductId = productId;
            productSku.Sku = sku;
            productSku.IsDefault = isDefault;
            return productSku;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.String _ProductId;
        partial void OnProductIdChanging(global::System.String value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Sku
        {
            get
            {
                return _Sku;
            }
            set
            {
                if (_Sku != value)
                {
                    OnSkuChanging(value);
                    ReportPropertyChanging("Sku");
                    _Sku = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Sku");
                    OnSkuChanged();
                }
            }
        }
        private global::System.String _Sku;
        partial void OnSkuChanging(global::System.String value);
        partial void OnSkuChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDefault
        {
            get
            {
                return _IsDefault;
            }
            set
            {
                OnIsDefaultChanging(value);
                ReportPropertyChanging("IsDefault");
                _IsDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDefault");
                OnIsDefaultChanged();
            }
        }
        private global::System.Boolean _IsDefault;
        partial void OnIsDefaultChanging(global::System.Boolean value);
        partial void OnIsDefaultChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProductCatalogModel", "FK_ProductSku_ProductId", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ProductCatalogModel.FK_ProductSku_ProductId", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ProductCatalogModel.FK_ProductSku_ProductId", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ProductCatalogModel.FK_ProductSku_ProductId", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("ProductCatalogModel.FK_ProductSku_ProductId", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProductCatalogModel", Name="ProductSkuRule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductSkuRule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductSkuRule object.
        /// </summary>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="invalidProductId">Initial value of the InvalidProductId property.</param>
        /// <param name="invalidSku">Initial value of the InvalidSku property.</param>
        public static ProductSkuRule CreateProductSkuRule(global::System.String productId, global::System.String invalidProductId, global::System.String invalidSku)
        {
            ProductSkuRule productSkuRule = new ProductSkuRule();
            productSkuRule.ProductId = productId;
            productSkuRule.InvalidProductId = invalidProductId;
            productSkuRule.InvalidSku = invalidSku;
            return productSkuRule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.String _ProductId;
        partial void OnProductIdChanging(global::System.String value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvalidProductId
        {
            get
            {
                return _InvalidProductId;
            }
            set
            {
                if (_InvalidProductId != value)
                {
                    OnInvalidProductIdChanging(value);
                    ReportPropertyChanging("InvalidProductId");
                    _InvalidProductId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("InvalidProductId");
                    OnInvalidProductIdChanged();
                }
            }
        }
        private global::System.String _InvalidProductId;
        partial void OnInvalidProductIdChanging(global::System.String value);
        partial void OnInvalidProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvalidSku
        {
            get
            {
                return _InvalidSku;
            }
            set
            {
                if (_InvalidSku != value)
                {
                    OnInvalidSkuChanging(value);
                    ReportPropertyChanging("InvalidSku");
                    _InvalidSku = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("InvalidSku");
                    OnInvalidSkuChanged();
                }
            }
        }
        private global::System.String _InvalidSku;
        partial void OnInvalidSkuChanging(global::System.String value);
        partial void OnInvalidSkuChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReplacementProductId
        {
            get
            {
                return _ReplacementProductId;
            }
            set
            {
                OnReplacementProductIdChanging(value);
                ReportPropertyChanging("ReplacementProductId");
                _ReplacementProductId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReplacementProductId");
                OnReplacementProductIdChanged();
            }
        }
        private global::System.String _ReplacementProductId;
        partial void OnReplacementProductIdChanging(global::System.String value);
        partial void OnReplacementProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReplacementSku
        {
            get
            {
                return _ReplacementSku;
            }
            set
            {
                OnReplacementSkuChanging(value);
                ReportPropertyChanging("ReplacementSku");
                _ReplacementSku = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReplacementSku");
                OnReplacementSkuChanged();
            }
        }
        private global::System.String _ReplacementSku;
        partial void OnReplacementSkuChanging(global::System.String value);
        partial void OnReplacementSkuChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProductCatalogModel", Name="ProductType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductType object.
        /// </summary>
        /// <param name="productTypeId">Initial value of the ProductTypeId property.</param>
        /// <param name="canOnlyHaveOneProductPerType">Initial value of the CanOnlyHaveOneProductPerType property.</param>
        public static ProductType CreateProductType(global::System.Int32 productTypeId, global::System.Boolean canOnlyHaveOneProductPerType)
        {
            ProductType productType = new ProductType();
            productType.ProductTypeId = productTypeId;
            productType.CanOnlyHaveOneProductPerType = canOnlyHaveOneProductPerType;
            return productType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductTypeId
        {
            get
            {
                return _ProductTypeId;
            }
            set
            {
                if (_ProductTypeId != value)
                {
                    OnProductTypeIdChanging(value);
                    ReportPropertyChanging("ProductTypeId");
                    _ProductTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductTypeId");
                    OnProductTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductTypeId;
        partial void OnProductTypeIdChanging(global::System.Int32 value);
        partial void OnProductTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaxQuantityPerProduct
        {
            get
            {
                return _MaxQuantityPerProduct;
            }
            set
            {
                OnMaxQuantityPerProductChanging(value);
                ReportPropertyChanging("MaxQuantityPerProduct");
                _MaxQuantityPerProduct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxQuantityPerProduct");
                OnMaxQuantityPerProductChanged();
            }
        }
        private Nullable<global::System.Int32> _MaxQuantityPerProduct;
        partial void OnMaxQuantityPerProductChanging(Nullable<global::System.Int32> value);
        partial void OnMaxQuantityPerProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanOnlyHaveOneProductPerType
        {
            get
            {
                return _CanOnlyHaveOneProductPerType;
            }
            set
            {
                OnCanOnlyHaveOneProductPerTypeChanging(value);
                ReportPropertyChanging("CanOnlyHaveOneProductPerType");
                _CanOnlyHaveOneProductPerType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanOnlyHaveOneProductPerType");
                OnCanOnlyHaveOneProductPerTypeChanged();
            }
        }
        private global::System.Boolean _CanOnlyHaveOneProductPerType;
        partial void OnCanOnlyHaveOneProductPerTypeChanging(global::System.Boolean value);
        partial void OnCanOnlyHaveOneProductPerTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProductCatalogModel", "FK_Product_ProductTypeId", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("ProductCatalogModel.FK_Product_ProductTypeId", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("ProductCatalogModel.FK_Product_ProductTypeId", "Product", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
